{"Autodesk":{"slug":"Autodesk","filePath":"Autodesk.md","title":"Autodesk Software Installation Guide","links":[],"tags":[],"content":"Introduction\nAutodesk is a leading force in the design and BIM industries, widely recognised for its extensive range of software solutions and large global user base. In OENG1191, we will be utilising the following Autodesk software:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNameDescriptionRevitRevit is a powerful BIM software that enables architects, engineers, and designers to create, coordinate, and manage building information models with precision and efficiency.Robot Structural Analysis ProfessionalRobot Structural Analysis Professional is an advanced structural analysis software that enables engineers to simulate, analyse, and optimise complex building and infrastructure designs with precision and efficiency\nCreate account with education access\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do1Go to this Autodesk education access website. (Right-click and open the link in a new tab)2Click Sign in on top right of the page.3In the following Sign in page, click Create account.4Use your RMIT student email to create account.5Now you can proceed to get access to specific software.\n\n\n                  \n                  For students who have previously applied for an Autodesk education account: \n                  \n                \n\nAn Autodesk education account is valid for only one year and requires annual renewal. The expiration date of software products under the education account aligns with the account itself. If you have previously applied for an Autodesk education account, please refer to Steps 10 - 12 to check the account’s expiration date and renew it accordingly.\n\n\nAcquire access of software\nThe following steps use Revit as an example. Please find the corresponding software and repeat the steps for other software\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do6Logging in to the Autodesk education website again. (Right-click and open the link in a new tab)7Find the required software on the page and click on Select.8In the next page, click Access products.9Confirm you subscription in the next page.\nCheck your subscriptions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do10Logging in to the Autodesk education website again. (Right click and open link in new tab)11Click the profile logo on the top right, then click Products and services.12In the All Products and Services page, go to Subscriptions and Contracts under Billings and Orders on the left bar.\nDownload software\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do13Logging in to the Autodesk education website again. (Right click and open link in new tab)14Click the profile logo on the top right, and click Products and services.15Due to issues with the Autodesk website, finding the software may be counterintuitive and misleading.16Under All Products and Services page, you MAY NOT find all the software you just got access to. If you do find any, click on Install. This will trigger download of a tiny size installer. Make sure you are downloading the latest 2025 version.17If you still have missing software, go to Home tab on top left the page.18Some software may appear in the Get Started section on this page. If there is any, click on Install. This will trigger download of a tiny size installer.19To install each software, begin by running the installer. This installer will handle downloading and installing the software, which may take some time to complete.\n\n\n                  \n                  Note that even if you install Revit and Navisworks on a drive other than C drive, these applications will still use a significant amount of space on the C drive. Freeing up some space on C before starting the installation process is advisable. \n                  \n                \n\nAdditional library for Revit\nRevit Additional Library - Australian provides region-specific content, such as templates, families, and annotations, tailored for architectural and engineering projects in Australia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do20Go to All Products and Services page, refer to step 10 - 11.21Find Revit, and click View details at the bottom of the block22In the following page, go to Libraries.23Find the Australia content package24Download and install the package."},"Dynamo-Calculation":{"slug":"Dynamo-Calculation","filePath":"Dynamo Calculation.md","title":"Dynamo Calculation Python Codes","links":[],"tags":[],"content":"Python script for random panels\nFull script (copy to dynamo)\ndata = IN[0]  \ntrue_type = IN[1]  \nfalse_type = IN[2]  \nkey = IN[3]  \n  \nresults = [x &gt; key for x in data]  \n  \ntypes = [true_type if result else false_type for result in results]  \n  \nOUT = types\nScript explained\n1. Define inputs\nIN[num] represent the inputs on the left of a node. You need to provide all of them.\ndata = IN[0]  # All random numbers.\ntrue_type = IN[1]  # Family type if the value is &#039;True&#039;.\nfalse_type = IN[2] # Family type if the value is &#039;False&#039;.\nkey = IN[3]  # Threshold value used for filtering.\n2. Value filtering\nThe results is a list of boolean values, such as: [True, True, False]\nresults = [x &gt; key for x in data] \n3. Assign types\nif result means result is ‘True’\ntypes = [true_type if result else false_type for result in results]  \n4. Output\nThis is standard requirement for Dynamo python. types is list of family types.\nOUT = types\nPython script for calculation\nFull script (copy to dynamo)\nimport math  \nimport clr  \nclr.AddReference(&#039;System.Windows.Forms&#039;)  \nfrom System.Windows.Forms import MessageBox  \n  \nangle_deg = IN[0]  \npower_per_m2 = IN[1]  \narea_mm2 = IN[2]  \n  \narea_m2 = area_mm2 * 0.000001  \nangle_rad = math.radians(angle_deg)  \n  \nefficiency_factor = max(0.0, math.cos(angle_rad))    \n  \noutput_power = power_per_m2 * efficiency_factor * area_m2  \nMessageBox.Show(&quot;Total Output Power:\\n{:.2f} kW&quot;.format(output_power), &quot;Calculation Done&quot;)  \n  \nOUT = output_power\nScript explained\n1. Import Statements\nimport math # Package for common math functions\nimport clr  # A Dynamo required runtime package\nclr.AddReference(&#039;System.Windows.Forms&#039;)  # Enable GUI for messagebox\nfrom System.Windows.Forms import MessageBox # Fucntion for pop-up messagebox\n2. Define inputs\nangle_deg = IN[0]   # Angle in degrees between the sun direction and the wall&#039;s normal vector\npower_per_m2 = IN[1]  # User defined power output of the solar panel, kw per m2\narea_mm2 = IN[2]  # Total area of all solar panels\n3. Unit conversion\narea_m2 = area_mm2 * 0.000001  \nangle_rad = math.radians(angle_deg)  # Convert angle from degrees to radians for trigonometric calculations\n4. Sun efficiency factor\nThe efficiency_factor represents how effectively sunlight hits the surface, based on the angle between the sun’s direction and the surface normal. This is computed using the cosine of the incidence angle (in radians).\n\nWhen the sunlight hits the surface perpendicularly (angle = 0°), cos(0) = 1, meaning 100% efficiency.\nWhen the angle increases toward 90°, the cosine decreases toward 0, meaning less effective exposure.\nFor angles beyond 90°, cos(angle) becomes negative, but we clamp it to 0.0 using max() to avoid negative efficiency.\n\nefficiency_factor = max(0.0, math.cos(angle_rad))    \n5. Message box\nCalculate the total power output and display with a message box.\noutput_power = power_per_m2 * efficiency_factor * area_m2  \nMessageBox.Show(&quot;Total Output Power:\\n{:.2f} kW&quot;.format(output_power), &quot;Calculation Done&quot;)  \nThis is standard requirement for Dynamo python.\nOUT = output_power"},"Revizto":{"slug":"Revizto","filePath":"Revizto.md","title":"Revizto Platform","links":[],"tags":[],"content":"Revizto is a cloud-based BIM coordination tool that integrates models, drawings, and issue tracking in one platform. It enhances BIM workflows by enabling real-time collaboration, clash detection, and VR/3D navigation. Compatible with Revit, Navisworks, and other BIM software, Revizto helps teams streamline communication, reduce errors, and improve project efficiency.\nInstallation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do1We will send an invitation email to enrolled students at the appropriate time. When you received the email, click Create account.2In the Registration page, create your password and Register.3Now you will be directed to the Workspace page of Revizto. Click Download.4Download the installer and Install Revizto application."},"Unity-DoorScript.cs-Explanation":{"slug":"Unity-DoorScript.cs-Explanation","filePath":"Unity DoorScript.cs Explanation.md","title":"Unity DoorScript.cs Explanation","links":[],"tags":[],"content":"This guide is not about learning programming.  Instead, it explains what the DoorScript.cs does in your Unity scene so you can tweak its settings with confidence.\nFull Codes\nusing UnityEngine;\nusing UnityEngine.UI;\n \npublic class DoorScript : MonoBehaviour\n{\n    public Transform leftDoorHinge;\n    public Transform rightDoorHinge;\n    public float openAngle = 90f;\n    public float openSpeed = 2f;\n    public GameObject popupText; // Assign in Inspector\n \n    private bool isOpen = false;\n    private bool inTriggerZone = false;\n    private Transform player;\n \n    void Start()\n    {\n        if (popupText != null)\n            popupText.SetActive(false);\n    }\n \n    void Update()\n    {\n        if (inTriggerZone &amp;&amp; Input.GetKeyDown(KeyCode.F))\n        {\n            isOpen = !isOpen;\n            StopAllCoroutines();\n            StartCoroutine(RotateDoors(isOpen));\n            if (popupText != null)\n                popupText.SetActive(false); // Hide text when triggered\n        }\n    }\n \n    private void OnTriggerEnter(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;))\n        {\n            inTriggerZone = true;\n            player = other.transform;\n            if (popupText != null)\n                popupText.SetActive(true);\n        }\n    }\n \n    private void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;))\n        {\n            inTriggerZone = false;\n            player = null;\n            if (popupText != null)\n                popupText.SetActive(false);\n        }\n    }\n \n    System.Collections.IEnumerator RotateDoors(bool open)\n    {\n        float targetAngleLeft, targetAngleRight;\n        if (player != null &amp;&amp; player.position.z &lt; transform.position.z) // Player in front\n        {\n            targetAngleLeft = open ? openAngle : 0;\n            targetAngleRight = open ? -openAngle : 0;\n        }\n        else\n        {\n            targetAngleLeft = open ? -openAngle : 0;\n            targetAngleRight = open ? openAngle : 0;\n        }\n        Quaternion startRotationLeft = leftDoorHinge.localRotation;\n        Quaternion endRotationLeft = Quaternion.Euler(0, targetAngleLeft, 0);\n        Quaternion startRotationRight = rightDoorHinge.localRotation;\n        Quaternion endRotationRight = Quaternion.Euler(0, targetAngleRight, 0);\n        float time = 0;\n        while (time &lt; 1)\n        {\n            time += Time.deltaTime * openSpeed;\n            leftDoorHinge.localRotation = Quaternion.Lerp(startRotationLeft, endRotationLeft, time);\n            rightDoorHinge.localRotation = Quaternion.Lerp(startRotationRight, endRotationRight, time);\n            yield return null;\n        }\n        leftDoorHinge.localRotation = endRotationLeft;\n        rightDoorHinge.localRotation = endRotationRight;\n    }\n}\nWhat This Script Achieves\nThink of a supermarket’s automatic door:\n\nIt knows when you’re nearby.\nA prompt tells you which key to press.\nBoth panels swing open the safe way, then shut again when you leave.\nThat is exactly what this script re‑creates for any two‑panel door model in Unity.\n\nThings You Set Up in the Inspector\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSettingWhat it representsTypical valueLeft Door HingeThe point where the left door panel pivots.Drag the left panel’s pivot transform here.Right Door HingeSame for the right panel.Drag the right panel’s pivot transform.Open AngleHow wide the door swings each way.90° is a full right‑angle.Open SpeedHow fast it opens/closes.2 = fairly quick, 0.5 = slow.Popup TextA UI prompt such as “Press F to open”.Drop a Canvas Text object here (optional).\nNo coding required: you simply assign these references in the Unity Editor.\nThe Story of What Happens\n1. Scene Starts\nThe script quietly hides the “Press F” prompt so nothing distracts the player.\n2. Player Approaches\n\nAn invisible trigger box around the door senses the player’s collider.\nThe prompt pops up, inviting the player to interact.\n\n3. Player Presses F\n\nThe script flips a mental switch: open if the door was closed, or close if it was already open.\nAny previous opening/closing animation is cancelled so the door never gets confused.\nThe prompt disappears (no need to keep showing it while the action is under way).\n\n4. Door Panels Swing\n\nEach side rotates smoothly from its current position to the target angle.\nThe script first checks which side of the door the player is on so the panels always swing away from the player—just like real life, to avoid bumps.\n\n5. Player Walks Away\n\nWhen the player exits the trigger box the prompt hides.\nThe door stays in its last position until someone presses F again.\n\nCommon Tweaks\n\nMake the door feel heavier: set Open Speed to a lower number.\nOnly one panel opens: assign the same Transform to both hinge slots, or leave one slot empty.\nSilent doors: remove the popup text and rely on player intuition.\nDifferent key: change “F” to another letter inside the Inspector’s Key Code field (if you add one)—or ask your programmer to do it.\n"},"Unity-TeleportScript.cs-Explanation":{"slug":"Unity-TeleportScript.cs-Explanation","filePath":"Unity TeleportScript.cs Explanation.md","title":"Unity TeleportScript.cs Explanation","links":[],"tags":[],"content":"This guide is not about learning programming.  Instead, it explains what the DoorScript.cs does in your Unity scene so you can tweak its settings with confidence.\nFull Codes\nusing UnityEngine;\npublic class TeleportScript : MonoBehaviour\n// 1) Interact to teleport\n{\n    public Transform teleportDestination;\n    public GameObject popupText; // Assign the UI popup GameObject in the Inspector\n    private bool canTeleport = false;\n \n    void Start()\n    {\n        if (popupText != null)\n            popupText.SetActive(false); // Hide on start\n    }\n \n    void Update()\n    {\n        if (canTeleport &amp;&amp; Input.GetKeyDown(KeyCode.F))\n        {\n            GameObject player = GameObject.FindWithTag(&quot;Player&quot;);\n            if (player != null)\n            {\n                player.transform.position = teleportDestination.position;\n            }\n        }\n    }\n \n    void OnTriggerEnter(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;))\n        {\n            canTeleport = true;\n            if (popupText != null)\n                popupText.SetActive(true); // Show text\n        }\n    }\n \n    void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;))\n        {\n            canTeleport = false;\n            if (popupText != null)\n                popupText.SetActive(false); // Hide text\n        }\n    }\n}\n \n// 2) Approach to teleport\n \n    public Transform teleportDestination; // Assign in Inspector\n    public Vector3 exitOffset = new Vector3(0, 0, 2); // Offset to land just outside the collider\n    private bool playerInside = false;\n \n    void OnTriggerEnter(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;) &amp;&amp; !playerInside)\n        {\n            Vector3 safePosition = teleportDestination.position + teleportDestination.forward * exitOffset.z\n                                                               + teleportDestination.right * exitOffset.x\n                                                               + teleportDestination.up * exitOffset.y;\n            other.transform.position = safePosition;\n            playerInside = true;\n        }\n    }\n \n    void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(&quot;Player&quot;))\n        {\n            playerInside = false;\n        }\n    }\n}\nWhat This Script Does\nImagine a magical doorway in a video game:\n\nWhen you walk close, a prompt appears.\nPress F and—poof!—you appear somewhere else.\nLeave the doorway and the prompt disappears.\n\nThat is exactly what this script makes happen for any object in your Unity level.\nThings You Configure in the Inspector\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSettingWhat it meansTypical valueTeleport DestinationThe exact spot where the player should re‑appear.Drag the empty GameObject that marks your target location.Popup TextA piece of UI, e.g. “Press F to teleport”.Drop a Canvas Text/Image object here (optional).No need to touch the code—just drag‑and‑drop the required objects in the Unity Editor.\nStep‑by‑Step Story of What Happens\n1. Scene Starts\nThe script hides the “Press F” prompt so players aren’t distracted.\n2. Player Enters the Trigger Zone\n\nAn invisible box collider (set as Is Trigger) detects the player.\nThe prompt pops up, inviting the player to interact.\nInside the script, a flag is set to true, meaning “you may teleport now”.\n\n3. Player Presses F\n\nThe script double‑checks that the player is inside the zone.\nIt instantly moves the player’s position to the Teleport Destination.\nNo fancy animations—just a quick, clean jump.\n\n4. Player Leaves the Zone\n\nThe flag resets to false.\nThe prompt hides, returning the scene to normal.\n\nCommon Tweaks\n\nMove the destination: simply drag the Teleport Destination object around in the Scene view.\nDifferent activation key: ask your programmer to change the letter in the script, or duplicate the script and adjust it for varied interactions.\nAutomatic teleport (no key press): uncomment the second code block inside the file. In that mode, the player is teleported the moment they step into the trigger.\n"},"Unity":{"slug":"Unity","filePath":"Unity.md","title":"Unity Engine Installation Guide","links":[],"tags":[],"content":"Unity is a real-time 3D platform that enhances BIM with interactive visualisation, VR/AR experiences, and real-time rendering. With tools like Unity Reflect, it integrates with BIM software (e.g., Revit, Navisworks) to:\n\nVisualise BIM models in real-time with high-quality rendering.\nEnable VR/AR experiences for design reviews and collaboration.\nSimulate construction processes to improve planning and coordination.\n\nGet Unity Hub\nUnity Hub is a tool for managing Unity versions, projects, and services. It is required for installing Unity Engine to ensure compatibility and streamline updates.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do1Go to Unity download page Here. (Right-click and open the link in a new tab)2Download Unity Hub for Windows3Run the downloaded file to install.4Start Unity Hub, you should see the page as below:\nRegister for Unity ID\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do5Click on Create account; it will jump to web browser. Follow the steps on the web to create your Unity ID with your RMIT student email.6Then, sign in to the Unity Hub with you new Unity ID. The process will bring you back to your web browser to log in again, and then you can click Open Unity Hub to return.7After first logging in, Unity Hub will ask you to install a Unity Editor; click on skip installation for now.\nUnity Student Plan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do8In Unity Hub, click the triangle at the top left, and in the dropdown menu, click Manage licenses.9In the new pop-up, click Add license.10In the following pop-up, find Get a Unity Student license.11It will bring you to your web browser. On the new web page, click Free access: post-secondary.12You will first see the page below. Click on Continue and follow all the steps until you see the page again.13Now click on Continue the second time, and you should be directed to a congratulatory page. This means you have completed the process. Check your email. You should have one email from SheerID and two emails from Unity Technologies. The license key for the Unity Student seat is in one of the emails.\nActivate your student license\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do14Repeat step 8 and 9. Select Activate with a serial number this time.15Fill in your key. You should see your Pro licence as below:\nInstall the editor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStepsTo do16In Unity Hub, choose Installs on the left bar, then Install Editor on the top right.17Choose to install Unity 618In the following option page, make sure Microsoft Visual Studio is checked. And then install the editor.\n\n\n                  \n                  Unity updates frequently, so please ensure you use the required version specified for this course. \n                  \n                \n"},"index":{"slug":"index","filePath":"index.md","title":"Welcome to OENG1191","links":["Unity","Unity-DoorScript.cs-Explanation","Unity-TeleportScript.cs-Explanation","Dynamo-Calculation","Autodesk","Revizto"],"tags":[],"content":"\nWeek 9-12 Unity\nPlease install the following:\n\nRefer to Unity Engine to install Unity Hub and Unity.\nAlso go to www.blender.org/download/ to download Blender, which is needed in Assignment 3\n\n\n\n                  \n                  Important \n                  \n                \n\nBlender is needed in Assignment 3 to fix the render issue in Unity models.\nNote that points will be deducted if your assignment 3 models has render issue.\nRefer the handout of week 9 import.\n\n\nCode explanation for unity basics handout:\n\nDoor automation\nTeleport function\n\nWeek 8 Dynamo Content\n\nDynamo Calculation\n\nHardware Requirements\nTo complete this course, you MUST HAVE a Windows laptop and bring it to class. If you do not have a Windows laptop, please do not enroll.\nSoftware Required\nPlease ensure that you have the following software installed before the course begins:\n\nAutodesk Software\nUnity Engine\nRevizto Platform\n\nFAQ\n\n\n                  \n                  Do I need a powerful laptop? \n                  \n                \n\nThe projects in this course are relatively small, so a laptop that meets the minimum software requirements is usually sufficient. We recommend referring to the minimum system requirements for Autodesk and Unity to ensure compatibility.\nAutodesk: www.autodesk.com/support/technical/article/caas/sfdcarticles/sfdcarticles/System-requirements-for-Revit-2025-products.html\nUntiy:\ndocs.unity3d.com/6000.0/Documentation/Manual/system-requirements.html\n\n\n\n\n                  \n                  Do I need programming knowledge? \n                  \n                \n\nThis course involves programming within a game development environment, namely Unity. However, the focus is not on learning how to code or write scripts from scratch. Instead, the necessary scripts will be prepared and provided to students. During the course, we will explain the rationale behind the scripts and teach students how to configure them to bring their interactions in Unity to life.\n\n"}}